upstream memcached-servers {
    server memcached:11211;
}

server {
    listen   80; ## listen for ipv4; this line is default and implied
    listen   [::]:80 default ipv6only=on; ## listen for ipv6
    listen   443 ssl http2;
    listen   [::]:443 ipv6only=on ssl http2;
    server_name localhost;
	
    keepalive_timeout  5 5;
    proxy_buffering    off;
 
    root /var/www/html;
    index index.php;
 
    access_log /var/log/nginx/access.log;
    error_log /var/log/nginx/error.log;

    # Enable SSL
    #ssl on;
    ssl_certificate     /usr/local/nginx/ssl/cert.crt;
    ssl_certificate_key /usr/local/nginx/ssl/cert.key;
    ssl_protocols       SSLv3 TLSv1 TLSv1.1 TLSv1.2;
    ssl_ciphers         HIGH:!aNULL:!MD5;

    # allow large uploads
    client_max_body_size 4G;

    # required to avoid HTTP 411: see Issue #1486 (https://github.com/docker/docker/issues/1486)
    chunked_transfer_encoding on;

    location / {
		try_files $uri $uri/ @memcached;
		proxy_http_version 1.1;
    }
 
     location ~* \.(js|css|png|jpg|jpeg|gif|ico)$ {
            expires 24h;
            log_not_found off;
    }
 
    # redirect server error pages to the static page /50x.html
    #
    error_page 500 502 503 504 /50x.html;
    location = /50x.html {
            root /var/www/html;
    }
 
    location ~ \.php$ {
        try_files $uri =404;
        fastcgi_index                           index.php;
        fastcgi_connect_timeout                 10;
        fastcgi_send_timeout                    180;
        fastcgi_read_timeout                    180;
        fastcgi_buffer_size                     512k;
        fastcgi_buffers                         4       256k;
        fastcgi_busy_buffers_size               512k;
        fastcgi_temp_file_write_size            512k;
        fastcgi_intercept_errors                on;
        fastcgi_split_path_info                 ^(.+\.php)(/.*)$;
        fastcgi_keep_conn                       on;
        
        include fastcgi_params;
        fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
        fastcgi_param PATH_INFO $fastcgi_path_info;
		
        # uncomment these for HTTPS usage
        #fastcgi_param  HTTPS                   $https if_not_empty;
        #fastcgi_param  SSL_PROTOCOL            $ssl_protocol if_not_empty;
        #fastcgi_param  SSL_CIPHER              $ssl_cipher if_not_empty;
        #fastcgi_param  SSL_SESSION_ID          $ssl_session_id if_not_empty;
        #fastcgi_param  SSL_CLIENT_VERIFY       $ssl_client_verify if_not_empty;
		
		fastcgi_pass wp:9000;
    }
	
    # try to get result from memcached
    location @memcached {
        default_type text/html;
        set $memcached_key data-$scheme://$host$request_uri;
        set $memcached_request 1;

        # exceptions
        # avoid cache serve of POST requests
        if ($request_method = POST ) {
            set $memcached_request 0;
        }

        # avoid cache serve of wp-admin-like pages, starting with "wp-"
        if ( $uri ~ "/wp-" ) {
            set $memcached_request 0;
        }

        # avoid cache serve of any URL with query strings
        if ( $args ) {
            set $memcached_request 0;
        }

        if ($http_cookie ~* "comment_author_|wordpressuser_|wp-postpass_|wordpress_logged_in_" ) {
            set $memcached_request 0;
        }


        if ( $memcached_request = 1) {
            add_header X-Cache-Engine "WP-FFPC with memcache via nginx";
            memcached_pass memcached-servers;
            error_page 404 = @rewrites;
        }

        if ( $memcached_request = 0) {
            rewrite ^ /index.php last;
        }
    }

    location ^~ /.well-known {
        allow all;
        root  /data/letsencrypt/;
    }
	
    location @rewrites {
        add_header X-Cache-Engine "No cache";
        rewrite ^ /index.php last;
    }
}
